version: '3'

services:

  omnimix:
    image: omnimix
    build:
      context: .
      dockerfile: steps/Dockerfile
    container_name: omnimix
    environment:
      PTG_URL: $PTG_URL
    volumes:
      - ${VOLUMES}/models:/src/app/models
      - ${VOLUMES}/models/cache:/root/.cache
      - ${VOLUMES}/models/torch_iocache:/root/.torch/iopath_cache
    restart: unless-stopped
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    devices:
     - /dev/nvidia1:/dev/nvidia0
      #- /dev/nvidia1:/dev/nvidia1

  bbn_objects:
    image: bbn_objects
    build:
      context: .
      dockerfile: bbn_objects/Dockerfile
    container_name: bbn_objects
    environment:
      PTG_URL: $PTG_URL
    volumes:
      - ${VOLUMES}/models:/src/app/models
      - ${VOLUMES}/models/cache:/root/.cache
    restart: unless-stopped
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 2
              capabilities: [gpu]
    devices:
     - /dev/nvidia0:/dev/nvidia0
     - /dev/nvidia1:/dev/nvidia1

  # detic:
  #   image: detic
  #   build:
  #     context: .
  #     dockerfile: detic/Dockerfile
  #   container_name: detic
  #   environment:
  #     PTG_URL: $PTG_URL
  #   volumes:
  #     - ${VOLUMES}/models/cache:/root/.torch/iopath_cache/detic
  #     - ${VOLUMES}/models/cache:/root/.cache
  #     - ${VOLUMES}/models:/src/app/models
  #     - ${VOLUMES}/recordings:/src/app/recordings
  #   restart: unless-stopped
  #   deploy:
  #     resources:
  #       reservations:
  #         devices:
  #           - driver: nvidia
  #             count: 2
  #             capabilities: [gpu]
  #   devices:
  #    - /dev/nvidia0:/dev/nvidia0
  #    - /dev/nvidia1:/dev/nvidia1
  
  # egovlp:
  #   image: egovlp
  #   build:
  #     context: .
  #     dockerfile: actions/Dockerfile
  #   container_name: egovlp
  #   #command: -c 'import time;time.sleep(600)'
  #   volumes:
  #     - ${VOLUMES}/models/cache:/root/.cache
  #     - ${VOLUMES}/models:/src/app/models
  #     - ${VOLUMES}/models/fewshot:/src/app/fewshot
  #     - ${VOLUMES}/recordings:/src/app/recordings
  #   environment:
  #     LOCAL_RANK: '0'
  #     PTG_URL: $PTG_URL
  #   restart: unless-stopped
  #   deploy:
  #     resources:
  #       reservations:
  #         devices:
  #           - driver: nvidia
  #             count: 1
  #             capabilities: [gpu]
  #   devices:
  #    - /dev/nvidia0:/dev/nvidia0
  
  # actionclip:
  #   image: actionclip
  #   build:
  #     context: .
  #     dockerfile: actionclip/Dockerfile
  #   container_name: actionclip
  #   volumes:
  #     - ${VOLUMES}/models/.cache:/root/.cache
  #     - ${VOLUMES}/models:/src/lib/ptgprocess/models
  #   restart: unless-stopped
  #   deploy:
  #     resources:
  #       reservations:
  #         devices:
  #           - driver: nvidia
  #             count: 1
  #             capabilities: [gpu]
  #   devices:
  #    - /dev/nvidia0:/dev/nvidia0
  
  reasoning:
    build: ./reasoning
    container_name: reasoning
    restart: unless-stopped
    #command: -c 'import time;time.sleep(600)'
    environment:
      PTG_URL: $PTG_URL
    volumes:
      - ${VOLUMES}/models/reasoning:/src/app/models
      - ${VOLUMES}/models/reasoning/nltk:/usr/share/nltk_data
      - ${VOLUMES}/models/reasoning/spacy:/opt/conda/lib/python3.8/site-packages/en_core_web_lg
    devices:
     - /dev/nvidia0:/dev/nvidia0

  memory:
    build: ./memory
    container_name: memory
    restart: unless-stopped
    environment:
      PTG_URL: $PTG_URL

  in3d:
    build: ./in3d
    container_name: in3d
    restart: unless-stopped
    environment:
      PTG_URL: $PTG_URL

# connect these containers to the server containers
networks:
  default:
    name: ptg
    external: true

version: '3'

x-loki-logging: &lokilogging
  driver: json-file
  options:
    tag: "{{.Name}}"

services:

  raw_recorder:
    image: ptgprocess
    container_name: raw_recorder
    restart: unless-stopped
    networks:
      - ptg
    volumes:
      - ${VOLUMES}/recordings/raw:/src/recordings
    command: -m ptgprocess.processors.record raw run

  video_recorder:
    image: ptgprocess
    container_name: video_recorder
    restart: unless-stopped
    networks:
      - ptg
    volumes:
      - ${VOLUMES}/recordings/post:/src/recordings
    command: -m ptgprocess.processors.record video run

  audio_recorder:
    image: ptgprocess
    container_name: audio_recorder
    restart: unless-stopped
    networks:
      - ptg
    volumes:
      - ${VOLUMES}/recordings/post:/src/recordings
    command: -m ptgprocess.processors.record audio run

  json_recorder:
    image: ptgprocess
    container_name: json_recorder
    restart: unless-stopped
    networks:
      - ptg
    volumes:
      - ${VOLUMES}/recordings/post:/src/recordings
    command: -m ptgprocess.processors.record json run



  # 

  actionclip:
    image: ptgprocess
    container_name: actionclip
    networks:
      - ptg
    volumes:
      - ${VOLUMES}/models:/src/lib/ptgprocess/models
      - ${VOLUMES}/models/pretrained-clip/:/root/.cache/clip
    restart: unless-stopped
    command: -m ptgprocess.processors.clip action2 run

  yolo3d:
    image: ptgprocess
    container_name: yolo
    networks:
      - ptg
    restart: unless-stopped
    volumes:
      - ${VOLUMES}/models:/src/app/models
    command: -m ptgprocess.processors.yolo3d run
    environment:
      MODEL_DIR: /src/app/models


  # Machine Learning for Streams

  # yolo3d:
  #   build: ./yolo
  #   container_name: yolo3d
  #   networks:
  #     - ptg
  #   restart: unless-stopped
  #   logging: *lokilogging

  # clip_zero:
  #   build: ./clip-zero
  #   container_name: clip_zero
  #   networks:
  #     - ptg
  #   environment:
  #     REDIS_URL: redis://redis:6379
  #   restart: unless-stopped
  #   logging: *lokilogging

  reasoning:
    build: ./reasoning
    container_name: reasoning
    networks:
      - ptg
    restart: unless-stopped
    logging: *lokilogging


# connect these containers to the server containers
networks:
  ptg:
    external: true
    name: ptg-api-server_default
